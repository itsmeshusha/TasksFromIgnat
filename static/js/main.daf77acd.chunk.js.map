{"version":3,"sources":["p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h13/RequestsAPI.ts","p2-homeworks/h13/request-reducer.ts","p2-homeworks/h13/Request.tsx","p2-homeworks/h13/HW13.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/bll/store.ts","index.tsx","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h12/HW12.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h11/HW11.module.css"],"names":["Error404","Message","props","className","s","message","ava","src","avatar","alt","name","triangle","text","time","messageData","HW1","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","setError","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","span","SuperButton","red","finalClassName","default","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","onClick","PreJunior","SuperCheckbox","onChangeChecked","checkbox","checked","instance","axios","create","baseURL","requestAPI","success","post","setMessageAC","Request","setChecked","useSelector","request","dispatch","useDispatch","then","res","data","errorText","catch","err","console","log","response","HW13","JuniorPlus","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","slider","HW11","value1","setValue1","value2","setValue2","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","initState","color","themes","HW12","theme","changeThemeC","Junior","PATH","Routes","path","exact","render","to","Header","header","activeClassName","header_active","HW5","App","Boolean","window","location","hostname","match","loading","reducers","combineReducers","action","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.daf77acd.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\r\nimport s from './Message.module.css';\r\n\r\nexport type MessageDataType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageDataType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <img className={s.ava} src={props.avatar} alt={\"ava\"}/>\r\n            <div className={s.name}>{props.name}</div>\r\n            <div className={s.triangle}></div>\r\n            <div className={s.text}>{props.message}</div>\r\n            <div className={s.time}>{props.time}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message, {MessageDataType} from \"./Message\";\r\n\r\nconst messageData: MessageDataType = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Artem\",\r\n    message: \"npm start пробовал?\",\r\n    time: \"20:00\"\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            {/* <hr/>\r\n            для личного творчества, могу проверить\r\n            <AlternativeMessage/>\r\n            <hr/> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    setError: (error: string) => void\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        setError,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n        setError(\"\")\n    \n    }\n    \n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? s.errorInput : s.superInput; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\nimport s from \"../../HW6.module.css\"\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n    const [error, setError] = useState<string>(\"\")\n\n    const onEnterCallback = () => {\n        // setEditMode(); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n        setEditMode(false);\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n        setEditMode(false);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode(); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n        setEditMode(true);\n    };\n\n    const spanClassName =  `${s.span} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        setError={setError}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        setValue(restoreState(\"editable-span-value\", value))\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter your text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\n//import HW2 from \"../../h2/HW2\";\n//import HW3 from \"../../h3/HW3\";\n//import HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            {/* <HW2/>\n            <HW3/>\n            <HW4/> */}\n            <HW6 />\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); \n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        \n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: ' https://neko-cafe-back.herokuapp.com/'\r\n})\r\n\r\nexport const requestAPI = {\r\n    requestPost(success: boolean) {\r\n        return instance.post(`/auth/test`, {success: success})\r\n    }\r\n}","let initState = 'No message...';\r\n\r\ntype initStateType = string\r\n\r\ntype setMessageActionType = ReturnType<typeof setMessageAC>\r\n\r\nexport const requestReducer = (state = initState, action: setMessageActionType): initStateType => {\r\n    switch(action.type) {\r\n        case \"SET-MESSAGE\":\r\n            let copyState = state\r\n            copyState = action.message\r\n            return copyState\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setMessageAC = (message: string) => ({type: 'SET-MESSAGE', message} as const)","import React, {useState} from 'react'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../h4/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\nimport {requestAPI} from \"./RequestsAPI\";\r\nimport {setMessageAC} from \"./request-reducer\";\r\n\r\n\r\nconst Request = () => {\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    let message = useSelector<AppStoreType, string>(state => state.request)\r\n    const dispatch = useDispatch()\r\n\r\n    const sendRequest = () => {\r\n        requestAPI.requestPost(checked)\r\n            .then(res => {\r\n                dispatch(setMessageAC(res.data.errorText))\r\n            })\r\n            .catch(err => {\r\n                console.log({...err})\r\n                console.log(err.response ? err.response.data.errorText : err.message)\r\n                dispatch(setMessageAC(err.message))\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>{message}</div>\r\n            <span>\r\n            <SuperButton onClick={sendRequest}>Send Request</SuperButton>\r\n            </span>\r\n            <span>\r\n            <SuperCheckbox checked={checked} onChangeChecked={setChecked}/>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Request;","import React from 'react'\r\nimport Request from \"./Request\";\r\n\r\nconst HW13 = () => {\r\n    return <div>\r\n        homework 13\r\n\r\n        <Request />\r\n    </div>\r\n\r\n}\r\n\r\nexport default HW13;\r\n\r\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\nimport HW13 from \"../../h13/HW13\";\n\nfunction JuniorPlus() {\n    return (\n        <div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW6/>*/}\n            <HW13/>\n\n        </div>\n    );\n}\n\nexport default JuniorPlus;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperRange.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n    value: number\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className, value,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value);\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\n\n    return (\n        <>\n            <input\n                type={\"range\"}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n                value={value}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    );\n}\n\nexport default SuperRange;\n","import React from \"react\";\nimport 'antd/dist/antd.css';\nimport {Slider} from \"antd\";\nimport s from '../../HW11.module.css'\n\ntype SuperDoubleRangePropsType = {\n    onChangeRange?: (value: Array<number>) => void\n    value?: [number, number]\n    // min, max, step, disable, ...\n}\n\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\n    {\n        onChangeRange, value,\n        // min, max, step, disable, ...\n    }\n) => {\n    // сделать самому, можно подключать библиотеки\n\n    const onChangeCallback = (value: Array<number>) => {\n        onChangeRange && onChangeRange(value)\n    }\n\n    return (\n        <div className={s.slider}>\n            <Slider\n                range\n                value={value}\n                onChange={onChangeCallback}\n            />\n        </div>\n    );\n}\n\nexport default SuperDoubleRange;\n","import React, {useState} from \"react\";\nimport SuperRange from \"./common/c7-SuperRange/SuperRange\";\nimport SuperDoubleRange from \"./common/c8-SuperDoubleRange/SuperDoubleRange\";\n\nfunction HW11() {\n    const [value1, setValue1] = useState(0);\n    const [value2, setValue2] = useState(100);\n\n    const onChangeRange = (value: Array<number>) => {\n        setValue1(value[0])\n        setValue2(value[1])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 11\n\n            {/*should work (должно работать)*/}\n            <div>\n                <span>{value1}</span>\n                <SuperRange\n                    value={value1}\n                    onChangeRange={setValue1}\n                    // сделать так чтоб value1 изменялось\n                />\n                <span>{value2}</span>\n            </div>\n\n            <div>\n\n                <SuperDoubleRange\n                    onChangeRange={onChangeRange}\n                    value={[value1, value2]}\n                    // сделать так чтоб value1 и value2 изменялось\n                />\n\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperRange/>*/}\n            {/*<AlternativeSuperDoubleRange/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW11;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent, OptionHTMLAttributes} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options: string[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\nconst mappedOptions = options.map((o, i) => <option key={o + '_key_' + i}>{o}</option>)  ; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","export type InitType = {\n    color: string\n}\n\ntype changeThemeCType = {\n    type: \"COLOR\"\n    color: string\n}\n\nconst initState: InitType = {\n    color: 'dark'\n};\n\nexport const themeReducer = (state = initState, action: any): any => { // fix any\n    switch (action.type) {\n        case \"COLOR\": {\n            return {\n                ...state,\n                color: action.color\n            };\n        }\n        default: return state;\n    }\n};\n\nexport const changeThemeC = (color: string): changeThemeCType => ({type: \"COLOR\", color} as const); // fix any","import React from \"react\";\nimport s from \"./HW12.module.css\";\nimport SuperSelect from \"../h7/common/c5-SuperSelect/SuperSelect\";\nimport {AppStoreType} from \"../h10/bll/store\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeThemeC} from \"./bll/themeReducer\";\n\nconst themes = ['dark', 'red', 'some', 'purple', 'blue'];\n\nfunction HW12() {\n    const theme = useSelector<AppStoreType, string>(state => state.theme.color); // useSelector\n    const dispatch = useDispatch()\n    const onChangeCallback = (color: string) => {\n        dispatch(changeThemeC(color))\n    }\n\n\n    return (\n        <div className={s[theme]}>\n            <hr/>\n            <span className={s[theme + '-text']}>\n                homeworks 12\n            </span>\n\n            {/*should work (должно работать)*/}\n            {/*SuperSelect or SuperRadio*/}\n            <div>\n                <SuperSelect options={themes} onChangeOption={onChangeCallback}/>\n            </div>\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW12;\n","import React from \"react\";\n//import HW1 from \"../../h1/HW1\";\n//import HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW7 from \"../../h7/HW7\";\nimport HW8 from \"../../h8/HW8\";\nimport HW9 from \"../../h9/HW9\";\nimport HW10 from \"../../h10/HW10\";\nimport HW11 from \"../../h11/HW11\";\nimport HW12 from \"../../h12/HW12\";\n\nfunction Junior() {\n    return (\n        <div>\n            {/* <HW1/>\n            <HW2/> */}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW7/>*/}\n            {/*<HW8 />*/}\n            {/*<HW9 />*/}\n            {/*<HW10 />*/}\n            <HW11/>\n            <HW12/>\n\n        </div>\n    );\n}\n\nexport default Junior;\n","import React from \"react\";\nimport { Switch, Route, Redirect} from 'react-router-dom';\nimport Error404 from './pages/Error404';\nimport PreJunior from './pages/PreJunior';\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport Junior from \"./pages/Junior\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\"\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            \n            <Switch>\n\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior />} />\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus />} />\n                \n             <Route render={() => <Error404/>}/>\n\n            </Switch>\n            \n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { PATH } from \"./Routes\";\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css'\n\nfunction Header() {\n    return (\n        <div className={s.header}>\n            <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.header_active}>PRE_JUNIOR</NavLink>\n            <NavLink to={PATH.JUNIOR} activeClassName={s.header_active}>JUNIOR</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} activeClassName={s.header_active}>JUNIOR_PLUS</NavLink>\n\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\n//import HW1 from \"../../../p2-homeworks/h1/HW1\";\r\n//import HW2 from \"../../../p2-homeworks/h2/HW2\";\r\n//import HW3 from \"../../../p2-homeworks/h3/HW3\";\r\n//import HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>React homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2 />*/}\r\n            {/* \r\n            <HW3 /> \r\n            <HW4 />\r\n             */}\r\n            <HW5 />\r\n            \r\n            \r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export type LoadingType = {\n    type: 'LOADING'\n    loading: boolean\n}\n\nexport type InitStateType = {\n    loading: boolean\n}\n\nconst initState: InitStateType = {\n    loading: false\n};\n\nexport const loadingReducer = (state = initState, action: LoadingType) => {\n    switch (action.type) {\n        case \"LOADING\": {\n            return {...state, loading: action.loading};\n        }\n        default: return state;\n    }\n};\n\nexport const loadingAC = (loading: boolean): LoadingType => {\n    return {\n        type: 'LOADING',\n        loading\n    } as const\n};","import {loadingReducer} from \"./loadingReducer\";\nimport {combineReducers, createStore} from \"redux\";\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\nimport {requestReducer} from \"../../h13/request-reducer\";\n\nconst reducers = combineReducers({\n    loading: loadingReducer,\n    theme: themeReducer,\n    request: requestReducer\n\n});\n\nconst store = createStore(reducers);\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store; // for dev\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./p2-homeworks/h10/bll/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store} >\r\n        <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1NDlu\",\"ava\":\"Message_ava__3gm1U\",\"name\":\"Message_name__5i6Bs\",\"text\":\"Message_text__1DAiX\",\"time\":\"Message_time__1ZAhB\",\"triangle\":\"Message_triangle__30lf1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3xqkK\",\"header_active\":\"Header_header_active__FYM2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3sfsi\",\"errorInput\":\"SuperInputText_errorInput__WIhT2\",\"error\":\"SuperInputText_error__3IkiQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3iXQi\",\"red\":\"SuperButton_red__3SQ1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2aEpI\",\"spanClassName\":\"SuperCheckbox_spanClassName__1o_TL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__3g6pG\",\"dark-text\":\"HW12_dark-text__2gsiS\",\"red\":\"HW12_red__269xm\",\"red-text\":\"HW12_red-text__2AmSe\",\"some\":\"HW12_some__RRHq6\",\"some-text\":\"HW12_some-text__yN1XV\",\"purple\":\"HW12_purple__1sGEw\",\"purple-text\":\"HW12_purple-text__3Rh1z\",\"blue\":\"HW12_blue__1veti\",\"blue-text\":\"HW12_blue-text__1AGHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__dMox8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__iYp-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"HW11_slider__1kKgJ\"};"],"sourceRoot":""}