{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","Message","props","className","s","message","ava","src","avatar","alt","name","triangle","text","time","messageData","HW1","PreJunior","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","elem","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","someClass","greeting","value","onChange","button","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","JuniorPlus","Junior","PATH","Routes","path","exact","render","to","Header","header","activeClassName","header_active","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2f4d34c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1NDlu\",\"ava\":\"Message_ava__3gm1U\",\"name\":\"Message_name__5i6Bs\",\"text\":\"Message_text__1DAiX\",\"time\":\"Message_time__1ZAhB\",\"triangle\":\"Message_triangle__30lf1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__3Amds\",\"someClass\":\"Greeting_someClass__1JP_r\",\"error\":\"Greeting_error__1IlbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3xqkK\",\"header_active\":\"Header_header_active__FYM2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3sfsi\",\"errorInput\":\"SuperInputText_errorInput__WIhT2\",\"error\":\"SuperInputText_error__3IkiQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3iXQi\",\"red\":\"SuperButton_red__3SQ1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2aEpI\",\"spanClassName\":\"SuperCheckbox_spanClassName__1o_TL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__dMox8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1VQp-\",\"column\":\"HW4_column__1TCPv\"};","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\r\nimport s from './Message.module.css';\r\n\r\nexport type MessageDataType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageDataType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <img className={s.ava} src={props.avatar} alt={\"ava\"}/>\r\n            <div className={s.name}>{props.name}</div>\r\n            <div className={s.triangle}></div>\r\n            <div className={s.text}>{props.message}</div>\r\n            <div className={s.time}>{props.time}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message, {MessageDataType} from \"./Message\";\r\n\r\nconst messageData: MessageDataType = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Artem\",\r\n    message: \"npm start пробовал?\",\r\n    time: \"20:00\"\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            {/* <hr/>\r\n            для личного творчества, могу проверить\r\n            <AlternativeMessage/>\r\n            <hr/> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\n//import HW2 from \"../../h2/HW2\";\n//import HW3 from \"../../h3/HW3\";\n//import HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            {/* <HW2/>\n            <HW3/>\n            <HW4/> */}\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id:number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };\n\n    return (\n        <div>\n            {props.affair.name}\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\n\ntype AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    };\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    };\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    };\n    const setLow = () => {\n        props.setFilter(\"low\")\n    };\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: FilterType\n}\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType> , filter: FilterType): Array<AffairType>  => {\n    if (filter === \"all\") return affairs;\n    if (filter === \"low\") {\n        return affairs.filter(elem => elem.priority === \"low\")\n    }\n    if (filter === \"middle\") {\n        return affairs.filter(elem => elem.priority === \"middle\")\n    }\n    if (filter === \"high\") {\n        return affairs.filter(elem => elem.priority === \"high\")\n    }\n    else return affairs;\n}\nexport const deleteAffair = (affairs: Array<AffairType> , _id: number): Array<AffairType>  => {\n    return affairs.filter(elem => elem._id !== _id);\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType> >(defaultAffairs);\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            \n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            \n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n// import SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: ()=>void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    let inputClass = error ? s.error : s.someClass ;\n\n    return (\n        <div className={s.greeting}>\n            {/* <SuperInputText setError={setError}\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}/> */}\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser} className={s.button}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string)=>void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\");\n    const [error, setError] = useState<string>(\"\");\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value)\n        setError('')\n\n    };\n    const addUser = () => {\n        if(name.trim()) {\n            addUserCallback(name);\n            alert(`Hello ${name} !`);\n            setName('')\n        } else {\n            setError('Введите имя!');\n        }\n    };\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]);\n\n    const addUserCallback = (name: string) => {\n        let newUser = {_id: v1(), name: name}\n        setUsers([newUser, ...users]);\n    }\n\n    return (\n        <div>\n\n            Homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n\n\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    setError: (error: string) => void\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        setError,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n        setError(\"\")\n    \n    }\n    \n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? s.errorInput : s.superInput; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); \n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        \n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    let [error, setError] = useState<string>(\"\")\n\n    const showAlert = () => {\n        \n        text ? setError(\"\") : setError(\"error\")\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); \n            setText('')\n            // если нет ошибки показать текст\n        }\n    }\n   // const error = text ? \"\" : \"error\";\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    setError={setError}\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChangeChecked={setChecked} onChange={testOnChange}/>\n            </div>\n\n            \n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            \n        </div>\n    );\n}\n\nexport default HW4;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\nimport s from \"../../HW6.module.css\"\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n    const [error, setError] = useState<string>(\"\")\n\n    const onEnterCallback = () => {\n        // setEditMode(); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n        setEditMode(false);\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n        setEditMode(false);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode(); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n        setEditMode(true);\n    };\n\n    const spanClassName =  `${s.span} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        setError={setError}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        setValue(restoreState(\"editable-span-value\", value))\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter your text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\nfunction JuniorPlus() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    );\n}\n\nexport default JuniorPlus;\n","import React from \"react\";\n//import HW1 from \"../../h1/HW1\";\n//import HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction Junior() {\n    return (\n        <div>\n            {/* <HW1/>\n            <HW2/> */}\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default Junior;\n","import React from \"react\";\nimport { Switch, Route, Redirect} from 'react-router-dom';\nimport Error404 from './pages/Error404';\nimport PreJunior from './pages/PreJunior';\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport Junior from \"./pages/Junior\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\"\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            \n            <Switch>\n\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior />} />\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus />} />\n                \n             <Route render={() => <Error404/>}/>\n\n            </Switch>\n            \n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { PATH } from \"./Routes\";\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css'\n\nfunction Header() {\n    return (\n        <div className={s.header}>\n            <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.header_active}>PRE_JUNIOR</NavLink>\n            <NavLink to={PATH.JUNIOR} activeClassName={s.header_active}>JUNIOR</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} activeClassName={s.header_active}>JUNIOR_PLUS</NavLink>\n\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\n//import HW1 from \"../../../p2-homeworks/h1/HW1\";\r\n//import HW2 from \"../../../p2-homeworks/h2/HW2\";\r\n//import HW3 from \"../../../p2-homeworks/h3/HW3\";\r\n//import HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\nimport HW6 from \"../../../p2-homeworks/h6/HW6\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>React homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2 />*/}\r\n            {/* \r\n            <HW3 /> \r\n            <HW4 />\r\n             */}\r\n            <HW5 />\r\n            <HW6 />\r\n            \r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}